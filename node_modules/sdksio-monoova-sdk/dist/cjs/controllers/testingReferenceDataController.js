"use strict";
/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.TestingReferenceDataController = void 0;
var tslib_1 = require("tslib");
var core_1 = require("@apimatic/core");
var dTOPublicPingResponseV1_1 = require("../models/dTOPublicPingResponseV1");
var baseController_1 = require("./baseController");
var TestingReferenceDataController = /** @class */ (function (_super) {
    tslib_1.__extends(TestingReferenceDataController, _super);
    function TestingReferenceDataController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * This endpoint returns the public key used by Monoova to sign messages.The public key is encoded as a
     * hexadecimal string. This public key should be expected to change every 1 year and should be updated
     * accordingly.
     *
     * @return Response from the API call
     */
    TestingReferenceDataController.prototype.publicCertificatePublicKey = function (requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('GET', '/public/v1/certificate/public-key');
                req.throwOn(400, core_1.ApiError, 'Bad request');
                req.throwOn(500, core_1.ApiError, 'Internal Server Error');
                return [2 /*return*/, req.callAsStream(requestOptions)];
            });
        });
    };
    /**
     * The primary purpose of the ping API is to validate that the Engine servers are up and running.
     *
     * @return Response from the API call
     */
    TestingReferenceDataController.prototype.publicPing = function (requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('GET', '/public/v1/ping');
                req.throwOn(400, core_1.ApiError, 'Bad request');
                req.throwOn(500, core_1.ApiError, 'Internal Server Error');
                return [2 /*return*/, req.callAsJson(dTOPublicPingResponseV1_1.dTOPublicPingResponseV1Schema, requestOptions)];
            });
        });
    };
    /**
     * This endpoint returns an X509 certificate which contains the public key that can be used to verify
     * messages sent by Monoova. The certificate returned is short lived (1 year validity) and should be
     * updated accordingly.
     *
     * @return Response from the API call
     */
    TestingReferenceDataController.prototype.publicCertificate = function (requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('GET', '/public/v1/certificate');
                req.throwOn(400, core_1.ApiError, 'Bad request');
                req.throwOn(500, core_1.ApiError, 'Internal Server Error');
                return [2 /*return*/, req.call(requestOptions)];
            });
        });
    };
    return TestingReferenceDataController;
}(baseController_1.BaseController));
exports.TestingReferenceDataController = TestingReferenceDataController;
//# sourceMappingURL=testingReferenceDataController.js.map