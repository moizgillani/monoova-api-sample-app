"use strict";
/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
exports.__esModule = true;
exports.SecurityController = void 0;
var tslib_1 = require("tslib");
var core_1 = require("@apimatic/core");
var dTOGenericPaymentCreateOneShotSecurityTokenResponseV1_1 = require("../models/dTOGenericPaymentCreateOneShotSecurityTokenResponseV1");
var dTOGenericPaymentSettingsResponseV1_1 = require("../models/dTOGenericPaymentSettingsResponseV1");
var schema_1 = require("../schema");
var baseController_1 = require("./baseController");
var SecurityController = /** @class */ (function (_super) {
    tslib_1.__extends(SecurityController, _super);
    function SecurityController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * This API returns the fees and permissions that have been given to the Sign-In Account.
     *
     * @return Response from the API call
     */
    SecurityController.prototype.securitySignInAccountSettings = function (requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('GET', '/security/v1/signInAccountSettings');
                req.throwOn(400, core_1.ApiError, 'Bad request');
                req.throwOn(500, core_1.ApiError, 'Internal Server Error');
                return [2 /*return*/, req.callAsJson(dTOGenericPaymentSettingsResponseV1_1.dTOGenericPaymentSettingsResponseV1Schema, requestOptions)];
            });
        });
    };
    /**
     * This API returns a security token that can be used only once or until it expires.  The purpose of
     * this token is that it can be embedded in a web form to enable you to make a single call to the
     * Engine without exposing your Sign-In Account credentials. When setting your security credentials to
     * call any of the APIs in this document (except for security/v1/createOneShotToken and
     * security/v1/createSecurityToken),  set the Username to the returned OneShotSecurityToken and set the
     * password to anything as it will be ignored. If you create the token and no longer require it, call
     * security/v1/deleteSecurityToken to have the token removed.
     *
     * @param timeOutMin  Each token has an expiry time between 1 and 15 minutes
     * @param tokenClaims This is Optional. Passing a 'Token' in parameter to generate restricted Token which
     *                              only allows user to create Token. Currently Available parameters are 'Admin' and
     *                              'Token'
     * @return Response from the API call
     */
    SecurityController.prototype.securityCreateOneShotSecurityToken = function (timeOutMin, tokenClaims, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var req, mapped;
            return tslib_1.__generator(this, function (_a) {
                req = this.createRequest('GET');
                mapped = req.prepareArgs({
                    timeOutMin: [timeOutMin, (0, schema_1.number)()],
                    tokenClaims: [tokenClaims, (0, schema_1.optional)((0, schema_1.string)())]
                });
                req.query('TokenClaims', mapped.tokenClaims);
                req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/security/v1/createOneShotSecurityToken/", ""], ["/security/v1/createOneShotSecurityToken/", ""])), mapped.timeOutMin);
                req.throwOn(400, core_1.ApiError, 'Bad request');
                req.throwOn(500, core_1.ApiError, 'Internal Server Error');
                return [2 /*return*/, req.callAsJson(dTOGenericPaymentCreateOneShotSecurityTokenResponseV1_1.dTOGenericPaymentCreateOneShotSecurityTokenResponseV1Schema, requestOptions)];
            });
        });
    };
    return SecurityController;
}(baseController_1.BaseController));
exports.SecurityController = SecurityController;
var templateObject_1;
//# sourceMappingURL=securityController.js.map