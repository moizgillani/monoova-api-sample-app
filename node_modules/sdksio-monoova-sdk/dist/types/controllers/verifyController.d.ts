/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { ApiResponse, RequestOptions } from '../core';
import { DTOVerifyAccountGetResponseV1 } from '../models/dTOVerifyAccountGetResponseV1';
import { DTOVerifyAccountInitiateResponseV1 } from '../models/dTOVerifyAccountInitiateResponseV1';
import { DTOVerifyAccountInitiateResponseV2 } from '../models/dTOVerifyAccountInitiateResponseV2';
import { DTOVerifyAccountListResponseV1 } from '../models/dTOVerifyAccountListResponseV1';
import { DTOVerifyAccountUpdateResponseV1 } from '../models/dTOVerifyAccountUpdateResponseV1';
import { DTOVerifyAccountValidateResponseV1 } from '../models/dTOVerifyAccountValidateResponseV1';
import { VerifyInitiate } from '../models/verifyInitiate';
import { VerifyUpdate } from '../models/verifyUpdate';
import { VerifyValidate } from '../models/verifyValidate';
import { BaseController } from './baseController';
export declare class VerifyController extends BaseController {
    /**
     * Inititiates a verification transaction against a designated bank account.
     *
     * @param body
     * @return Response from the API call
     */
    verifyAccountInitiate(body?: VerifyInitiate, requestOptions?: RequestOptions): Promise<ApiResponse<DTOVerifyAccountInitiateResponseV1>>;
    /**
     * Update the following fields for a verified account&#39;s without reverifying the bank account. Bank
     * Account Title, Has DDR authority
     *
     * @param body
     * @return Response from the API call
     */
    verifyAccountUpdate(body?: VerifyUpdate, requestOptions?: RequestOptions): Promise<ApiResponse<DTOVerifyAccountUpdateResponseV1>>;
    /**
     * Initiates a verification transaction against a designated bank account or PayID via NPP rail using
     * the v2 endpoint.
     *
     * @param body
     * @return Response from the API call
     */
    verifyNPPAccountPayIdInitiate(body?: unknown, requestOptions?: RequestOptions): Promise<ApiResponse<DTOVerifyAccountInitiateResponseV2>>;
    /**
     * Validates a code against a token generated via the initiate call. After 3 failed attempts the token
     * will get locked for 1 hour. Users can retry with same token after 1 hour or initiate a new
     * verification anytime.
     *
     * @param body
     * @return Response from the API call
     */
    verifyAccountValidate(body?: VerifyValidate, requestOptions?: RequestOptions): Promise<ApiResponse<DTOVerifyAccountValidateResponseV1>>;
    /**
     * Get a list of all verified bank accounts.
     *
     * @return Response from the API call
     */
    verifyAccountList(requestOptions?: RequestOptions): Promise<ApiResponse<DTOVerifyAccountListResponseV1>>;
    /**
     * Return details for a specific verification token.
     *
     * @param token Generated Token from verify/v1/aba/initiate (Initiates a verification transaction)
     * @return Response from the API call
     */
    verifyAccountGet(token: string, requestOptions?: RequestOptions): Promise<ApiResponse<DTOVerifyAccountGetResponseV1>>;
}
