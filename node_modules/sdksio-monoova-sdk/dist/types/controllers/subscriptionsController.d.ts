/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { ApiResponse, RequestOptions } from '../core';
import { SubscriptionsCreate } from '../models/subscriptionsCreate';
import { SubscriptionsCreateResponseV1 } from '../models/subscriptionsCreateResponseV1';
import { SubscriptionsDeleteResponseV1 } from '../models/subscriptionsDeleteResponseV1';
import { SubscriptionsListResponseV1 } from '../models/subscriptionsListResponseV1';
import { SubscriptionsReportV1 } from '../models/subscriptionsReportV1';
import { SubscriptionsResendResponseV1 } from '../models/subscriptionsResendResponseV1';
import { SubscriptionsUpdate } from '../models/subscriptionsUpdate';
import { SubscriptionsUpdateResponseV1 } from '../models/subscriptionsUpdateResponseV1';
import { BaseController } from './baseController';
export declare class SubscriptionsController extends BaseController {
    /**
     * Adds a new URL to which callbacks will be sent.
     *
     * @param body
     * @return Response from the API call
     */
    subscriptionsCreate(body?: SubscriptionsCreate, requestOptions?: RequestOptions): Promise<ApiResponse<SubscriptionsCreateResponseV1>>;
    /**
     * Returns a list of all webhooks registered.
     *
     * @return Response from the API call
     */
    subscriptionsList(requestOptions?: RequestOptions): Promise<ApiResponse<SubscriptionsListResponseV1>>;
    /**
     * Resends the associated webhook for the provided webhook ID
     *
     * @param webhookId Unique Id to identify this webhook notification.
     * @return Response from the API call
     */
    subscriptionsResendV2(webhookId: number, requestOptions?: RequestOptions): Promise<ApiResponse<SubscriptionsResendResponseV1>>;
    /**
     * Permanently deletes a webhook.
     *
     * @param id This is the Id of the Subscription you want to delete
     * @return Response from the API call
     */
    subscriptionsDelete(id: number, requestOptions?: RequestOptions): Promise<ApiResponse<SubscriptionsDeleteResponseV1>>;
    /**
     * Updates an existing URL or toggles its status.
     *
     * @param body
     * @return Response from the API call
     */
    subscriptionsUpdate(body?: SubscriptionsUpdate, requestOptions?: RequestOptions): Promise<ApiResponse<SubscriptionsUpdateResponseV1>>;
    /**
     * Provides a historical array of previously sent webhooks
     *
     * @param date date format should be 'yyyy-MM-dd' format.
     * @param skip Number of records to skip. 0 is the first record.
     * @param take Number of records to take. If endDate is provided maximum take is 10000.
     * @return Response from the API call
     */
    subscriptionsReport(date: string, skip?: number, take?: number, requestOptions?: RequestOptions): Promise<ApiResponse<SubscriptionsReportV1>>;
}
