/**
 * Monoova Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { ApiResponse, RequestOptions } from '../core';
import { DTOGenericPaymentCreateOneShotSecurityTokenResponseV1 } from '../models/dTOGenericPaymentCreateOneShotSecurityTokenResponseV1';
import { DTOGenericPaymentSettingsResponseV1 } from '../models/dTOGenericPaymentSettingsResponseV1';
import { BaseController } from './baseController';
export declare class SecurityController extends BaseController {
    /**
     * This API returns the fees and permissions that have been given to the Sign-In Account.
     *
     * @return Response from the API call
     */
    securitySignInAccountSettings(requestOptions?: RequestOptions): Promise<ApiResponse<DTOGenericPaymentSettingsResponseV1>>;
    /**
     * This API returns a security token that can be used only once or until it expires.  The purpose of
     * this token is that it can be embedded in a web form to enable you to make a single call to the
     * Engine without exposing your Sign-In Account credentials. When setting your security credentials to
     * call any of the APIs in this document (except for security/v1/createOneShotToken and
     * security/v1/createSecurityToken),  set the Username to the returned OneShotSecurityToken and set the
     * password to anything as it will be ignored. If you create the token and no longer require it, call
     * security/v1/deleteSecurityToken to have the token removed.
     *
     * @param timeOutMin  Each token has an expiry time between 1 and 15 minutes
     * @param tokenClaims This is Optional. Passing a 'Token' in parameter to generate restricted Token which
     *                              only allows user to create Token. Currently Available parameters are 'Admin' and
     *                              'Token'
     * @return Response from the API call
     */
    securityCreateOneShotSecurityToken(timeOutMin: number, tokenClaims?: string, requestOptions?: RequestOptions): Promise<ApiResponse<DTOGenericPaymentCreateOneShotSecurityTokenResponseV1>>;
}
